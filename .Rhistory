theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 3, label.y = 30) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
install.packages(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 3, label.y = 30) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
#stat_cor(method = "pearson", label.x = 3, label.y = 30) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 7.8) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.0) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 1.6) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 8) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "red") +
geom_smooth(method = "lm", colour = "black") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "red") +
geom_smooth(method = "lm", colour = "black") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
knitr::opts_chunk$set(echo = TRUE)
std <- function(x) sd(x)/sqrt(length(x))
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
geom_line(size = 1.2) +
geom_point(size = 5, shape = 1) +
geom_errorbar(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
width = 0.2,
size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
library(here)
library(tidyverse)
library(lubridate)
library(reshape2)
library(sf)
library(leaflet)
library(ggmap)
library(ggspatial)
library(ggord)
library(factoextra)
library(ggbiplot)
library(corrplot)
library(psych)
library(caret)
library(MASS)
library(klaR)
std <- function(x) sd(x)/sqrt(length(x))
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
geom_line(size = 1.2) +
geom_point(size = 5, shape = 1) +
geom_errorbar(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
width = 0.2,
size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
geom_line(size = 1.2) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
width = 0.2,
size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
geom_line(size = 1.2) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value)) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value)) +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
alpha = 0.3) +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
alpha = 0.3, colour = "black") +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
alpha = 0.3, colour = NULL) +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
alpha = 0.3, colour = NA) +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
variables <- c("sl", "i2", "i3", "duration_8", "meandom_6",
"duration_3", "meandom_8", "duration_2", "meandom_5", "meandom_1")
data_transformed <- data_clean_1 %>%
preProcess(method = c("center", "scale")) %>%
predict(data_clean_1) %>%
select(all_of(c("individual", variables[1:6])))
model <- data_transformed %>%
lda(individual ~ ., data = .)
# lda_data <- cbind(data_transformed, predict(model)$x)
# ggplot(lda_data, aes(LD1, LD2)) +
#   geom_point(aes(color = individual))
ggord(model, data_clean_1$site, arrow = NULL, txt = NULL) +
coord_fixed(ratio = 0.7)
