cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
geom_line(size = 1.2) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value)) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value)) +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
alpha = 0.3) +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
alpha = 0.3, colour = "black") +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
alpha = 0.3, colour = NULL) +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p <- bind_cols(cm_p_1[[2]], cm_p_2[[2]], cm_p_3[[2]], cm_p_4[[2]], cm_p_5[[2]],
cm_p_6[[2]], cm_p_7[[2]], cm_p_8[[2]], cm_p_9[[2]], cm_p_10[[2]],
cm_p_1[[3]], cm_p_2[[3]], cm_p_3[[3]], cm_p_4[[3]], cm_p_5[[3]],
cm_p_6[[3]], cm_p_7[[3]], cm_p_8[[3]], cm_p_9[[3]], cm_p_10[[3]]) %>%
rename(!!setNames(names(.), c(paste0("Accuracy_", seq(1:10)), paste0("Cohen's kappa_", seq(1:10))))) %>%
pivot_longer(everything(), names_to = "method", values_to = "value") %>%
separate(col = method, sep = "_", into = c("metrics", "n_variables")) %>%
mutate(n_variables = factor(n_variables, levels = unique(n_variables))) %>%
# ggplot(aes(x = n_variables, y = value)) +
# geom_boxplot() +
# geom_jitter(color = "steelblue",
#             size = 0.9,
#             position = position_jitter(width = 0.15),
#             alpha = 0.3) +
# facet_wrap(~metrics, nrow = 1) +
# theme_bw()
group_by(metrics, n_variables) %>%
summarize(mean_value = mean(value),
std_value = std(value)) %>%
ungroup() %>%
ggplot(aes(x = n_variables, y = mean_value,
colour = metrics, group = metrics)) +
#geom_point(size = 5, shape = 1) +
geom_ribbon(aes(ymin = mean_value - 1.96*std_value,
ymax = mean_value + 1.96*std_value),
alpha = 0.3, colour = NA) +
geom_line(size = 1.2) +
scale_colour_viridis_d() +
xlab("Number of variables") +
ylab("Value") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
acc_kappa_p
acc_kappa_p
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
variables <- c("sl", "i2", "i3", "duration_8", "meandom_6",
"duration_3", "meandom_8", "duration_2", "meandom_5", "meandom_1")
data_transformed <- data_clean_1 %>%
preProcess(method = c("center", "scale")) %>%
predict(data_clean_1) %>%
select(all_of(c("individual", variables[1:6])))
model <- data_transformed %>%
lda(individual ~ ., data = .)
# lda_data <- cbind(data_transformed, predict(model)$x)
# ggplot(lda_data, aes(LD1, LD2)) +
#   geom_point(aes(color = individual))
ggord(model, data_clean_1$site, arrow = NULL, txt = NULL) +
coord_fixed(ratio = 0.7)
knitr::opts_chunk$set(echo = TRUE)
temporal_songs <- data_clean_1 %>%
group_by(date, site) %>%
summarize(n_songs = n()) %>%
ungroup() %>%
ggplot(aes(x = date, y = site, fill = n_songs)) +
geom_point(shape = 22, size = 7) +
scale_fill_gradient(low = "mistyrose", high = "red") +
theme_bw() +
theme(legend.position = c(0.99, 0.05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
axis.title = element_text(size = 14)) +
labs(fill = "# of calls", x = "Date", y = "Site",
title = "# of BDOW calls per site per day")
library(here)
library(tidyverse)
library(lubridate)
library(reshape2)
library(sf)
library(leaflet)
library(ggmap)
library(ggspatial)
library(ggord)
library(factoextra)
library(ggbiplot)
library(corrplot)
library(psych)
library(caret)
library(MASS)
library(klaR)
here <- here::here
select <- dplyr::select
filter <- dplyr::filter
summarize <- dplyr::summarize
group_by <- dplyr::group_by
rename <- dplyr::rename
source(here("R", "Ch2_1_qualified_recording_list.R"))
source(here("R", "Ch2_2_move_recordings_to_folder.R"))
source(here("R", "Ch2_3_parameters_from_raventable.R"))
source(here("R", "Ch2_4_lda_n_fold_validation.R"))
data_birdnet <- read_csv(here("data", "barred_owl_recordings_list.csv"))
data_birdnet_clean <- data_birdnet %>%
filter(year == 2021) %>%
drop_na() %>%
mutate(date = ymd(paste0(year, month, day)),
hour = str_sub(recording, start = 10, end = 11),
Julian = yday(date),
day_period = cut(Julian,
breaks = c(40, 50, 60, 70, 80, 90, 100, 110, 120, 130, 140, 150)))
data <- read_csv(here("data", "barred_owl_recordings_list_parameters_2.csv"))
data_clean <- data %>%
filter_all(all_vars(. != 0)) %>%
mutate(site = str_sub(sound.files, start = 1, end = 5),
year = str_sub(sound.files, start = 7, end = 10),
month = str_sub(sound.files, start = 11, end = 12),
day = str_sub(sound.files, start = 13, end = 14),
unique_ID = seq(from = 1, to = nrow(.)),
individual = paste0(year, "_", site),
date = ymd(paste0(year, month, day)))
sites <- data_clean %>%
group_by(site) %>%
summarize(n = n()) %>%
filter(n >= 9) %>%
pull(site)
data_clean_1 <- data_clean %>%
filter(site %in% sites)
data_location <- read_csv(here("data", "JPRF_all_sites.csv"))
data_location_clean <- data_location %>%
rename("site" = Name, "longitude" = X, "latitude" = Y) %>%
select(site, longitude, latitude) %>%
mutate(group = str_extract(site, pattern = ".+(?=\\_)"))
temporal_songs <- data_clean_1 %>%
group_by(date, site) %>%
summarize(n_songs = n()) %>%
ungroup() %>%
ggplot(aes(x = date, y = site, fill = n_songs)) +
geom_point(shape = 22, size = 7) +
scale_fill_gradient(low = "mistyrose", high = "red") +
theme_bw() +
theme(legend.position = c(0.99, 0.05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
axis.title = element_text(size = 14)) +
labs(fill = "# of calls", x = "Date", y = "Site",
title = "# of BDOW calls per site per day")
temporal_songs
temporal_songs <- data_clean_1 %>%
group_by(date, site) %>%
summarize(n_songs = n()) %>%
ungroup() %>%
ggplot(aes(x = date, y = site, fill = n_songs)) +
geom_point(shape = 22, size = 7) +
scale_fill_gradient(low = "mistyrose", high = "red") +
theme_bw() +
theme(legend.position = c(0.99, 0.05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
axis.title = element_text(size = 14)) +
labs(fill = "# of calls", x = "Date", y = "Site")
#title = "# of BDOW calls per site per day")
temporal_songs
temporal_songs <- data_clean_1 %>%
group_by(date, site) %>%
summarize(n_songs = n()) %>%
ungroup() %>%
ggplot(aes(x = date, y = site, fill = n_songs)) +
geom_point(shape = 22, size = 7) +
scale_fill_gradient(low = "mistyrose", high = "red") +
theme_bw() +
theme(legend.position = c(0.99, 0.05),
legend.justification = c("right", "bottom"),
legend.box.just = "right",
axis.title = element_text(size = 14)) +
labs(fill = "# of calls", x = "Month", y = "Site")
#title = "# of BDOW calls per site per day")
temporal_songs
temporal_songs
JPRF_sf <- full_join(data_location_clean, data_clean_1 %>% group_by(site) %>% summarize(n_songs = n()),
by = "site", replace_na) %>%
replace_na(list(n_songs = 0)) %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
ggplot(data = .) +
geom_sf(aes(colour = group), shape = 3, stroke = 1.5, size = 3) +
geom_sf(aes(size = n_songs), shape = 1, stroke = 2, data = . %>% filter(n_songs != 0)) +
annotation_scale(location = "bl", width_hint = 0.4) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.2, "in"), pad_y = unit(0.3, "in"),
style = north_arrow_fancy_orienteering) +
coord_sf(xlim = c(-124.7, -124.1), ylim = c(54.55, 54.85)) +
theme_bw()
JPRF_sf
statistics <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value") %>%
group_nest(variable) %>%
mutate(mean = map_dbl(.x = data, .f =~ .x %>% pull(value) %>% mean()),
sd = map_dbl(.x = data, .f =~ .x %>% pull(value) %>% sd()),
min = map_dbl(.x = data, .f =~ .x %>% pull(value) %>% min()),
max = map_dbl(.x = data, .f =~ .x %>% pull(value) %>% max()),
CV_group = map_dbl(.x = data, .f =~ sd(.x$value)/mean(.x$value)*100),
CV_individual = map_dbl(.x = data, .f =~ .x %>%
group_by(site) %>%
dplyr::summarise(CV = sd(value)/mean(value)) %>%
pull(CV) %>%
mean() *100),
ANOVA = map_dbl(.x = data, .f =~ .x %>%
lm(formula = value ~ site) %>%
anova() %>%
.$`Pr(>F)` %>%
.[1])) %>%
select(-data)
statistics
statistics %>% view()
test <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value") %>%
group_nest(variable)
test
test
test <- data_clean_1 %>%
select(site, sl:meandom_8)
test
test <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value")
test
test <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value")
test
test <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value") %>%
group_nest(site)
test
test
test$data[[1]]
test1 <- test$data[[1]] %>%
group_by(variable)
test1
test1 <- test$data[[1]] %>%
group_by(variable) %>%
summarize(n = n(), mean = mean(value))
test1
test1 <- test$data[[1]] %>%
group_by(variable) %>%
summarize(n = n(), mean = mean(value), sd = sd(value), min = min(value), max = max(value))
test1
test <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value") %>%
group_nest(site) %>%
mutate(stats = map(.x = data, .f =~ .x %>%
group_by(variable) %>%
summarize(n = n(), mean = mean(value), sd = sd(value), min = min(value), max = max(value))))
test
test$stats[[1]]
test$stats[[2]]
test$stats[[10]]
test <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value") %>%
group_nest(site) %>%
mutate(stats = map(.x = data, .f =~ .x %>%
group_by(variable) %>%
summarize(n = n(),
mean = mean(value),
sd = sd(value),
min = min(value),
max = max(value),
CV = sd/mean)))
test
test
?unnest()
test <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value") %>%
group_nest(site) %>%
mutate(stats = map(.x = data, .f =~ .x %>%
group_by(variable) %>%
summarize(n = n(),
mean = mean(value),
sd = sd(value),
min = min(value),
max = max(value),
CV = sd/mean))) %>%
unnest(cols = c(site, stats))
test
test
test <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
pivot_longer(cols = c(-site), names_to = "variable", values_to = "value") %>%
group_nest(site) %>%
mutate(stats = map(.x = data, .f =~ .x %>%
group_by(variable) %>%
summarize(n = n(),
mean = mean(value),
sd = sd(value),
min = min(value),
max = max(value),
CV = sd/mean))) %>%
select(-data) %>%
unnest(cols = c(site, stats))
test
test %>% view()
library(heplots)
data_clean_1
colnames(data_clean_1)
data_clean_1 %>%
select(site, sl:meandom_8)
epochdat.boxm <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
boxM(.[, sl:meandom_8], .[, site])
epochdat.boxm <- data_clean_1 %>%
select(site, sl:meandom_8)
epochdat.boxm <- data_clean_1 %>%
select(site, sl:meandom_8) %>%
boxM(sl:meandom_8, .[, site])
