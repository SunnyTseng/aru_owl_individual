coord_fixed(ratio = 0.7)
acc_kappa_p
cm_p_6[[2]]
cm_p_6[[2]] %>% mean()
cm_p_6[[3]] %>% mean()
df <- melt(cm_p_6[[1]]$table)
colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = x, y = y, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table)
colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = x, y = y, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table)
df
df <- melt(cm_p_6[[1]]$table)
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df
log(0)
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = if_else(value == 0, 0.00000001, value))
df
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value )) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = if_else(value == 0, 0.1, value))
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = if_else(value == 0, 0.01, value))
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = if_else(value == 0, 0.001, value))
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = if_else(value == 0, 0.01, value))
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "yellow", high = "red", na.value = "yellow") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table)
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "blue", high = "red", na.value = "blue") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "grey", high = "black", na.value = "grey") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value)) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log10())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(colours = rainbow(5)) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(colours = rainbow(5)) +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table)
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = if_else(value <= 0, 0, value))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = if_else(value <= 1, 0, value))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = if_else(value < 1, 0, value))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "white",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "grey",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "grey",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "cornsilk",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value))
# colnames(df) <- c("x", "y", "value")
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
ggplot(df, aes(x = predicted, y = observed, fill = value  %>% log())) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient(low = "white", high = "red", na.value = "white") +
coord_fixed() +
theme(axis.text.x = element_text(angle = 60, vjust = 0.1, hjust = 0.2))
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
dist(vocal_spatial, method = "euclidean", diag = TRUE, upper = FALSE)
vocal_spatial
?dist()
x <- matrix(rnorm(100), nrow = 5)
dist(x)
dist(x, diag = TRUE)
dist(x, upper = TRUE)
m <- as.matrix(dist(x))
d <- as.dist(m)
stopifnot(d == dist(x))
x
test <- dist(x)
test
c(test)
x
vocal_spatial
dist_vocal <- dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean")
dist_vocal
dist_spatial <- dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean")
dist_vocal <- dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c()
dist_spatial <- dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c()
dist_vocal
ggplot(x = dist_spatial, y = dist_voca) %>%
geom_point()
ggplot(x = dist_spatial, y = dist_vocal) %>%
geom_point()
ggplot(aes(x = dist_spatial, y = dist_vocal)) %>%
geom_point()
ggplot(aes(x = dist_spatial, y = dist_vocal)) +
geom_point()
ggplot(x = dist_spatial, y = dist_vocal) +
geom_point()
ggplot(x = dist_spatial, y = dist_vocal) +
geom_point()
vocal_spatial_pair <- tibble(dist_vocal = dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c(),
dist_spatial = dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c())
vocal_spatial_pair
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point()
vocal_spatial
vocal_spatial_pair <- tibble(dist_vocal = dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c(),
dist_spatial = dist(vocal_spatial %>% select(longitude, latitude),
method = "euclidean") %>% c())
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point()
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point() +
geom_smooth(method = "lm")
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point() +
geom_smooth(method = "lm") +
theme_bw()
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 1, size = 2, colour = "red") +
geom_smooth(method = "lm") +
theme_bw()
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 5, size = 2, colour = "red") +
geom_smooth(method = "lm") +
theme_bw()
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
theme_bw()
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Vocal similarity") +
ylab("Distance between sites") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
#xlab("Vocal similarity") +
#ylab("Distance between sites") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12),
legend.title = element_blank(),
legend.text = element_text(size = 14),
legend.position = c(0.8, 0.2))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 3, label.y = 30) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
install.packages(ggpubr)
install.packages("ggpubr")
install.packages("ggpubr")
library(ggpubr)
knitr::opts_chunk$set(echo = TRUE)
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 3, label.y = 30) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
#stat_cor(method = "pearson", label.x = 3, label.y = 30) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 7.8) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.0) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 1.6) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 8) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 2, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "red") +
geom_smooth(method = "lm") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "red") +
geom_smooth(method = "lm", colour = "black") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "red") +
geom_smooth(method = "lm", colour = "black") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
