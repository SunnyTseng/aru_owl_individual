mutate(value = round(value),
predicted = str_sub(predicted, start = 9, end = 10),
observed = str_sub(observed, start = 9, end = 10))
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.position = "bottom")
confusion
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value),
predicted = str_sub(predicted, start = 9, end = 10),
observed = str_sub(observed, start = 9, end = 10))
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
confusion
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
stat_plot
library(patchwork)
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
stat_plot
eval <- confusion + stat_plot
eval <- confusion + stat_plot
library(patchwork)
confusion
stat_plot
eval <- confusion + stat_plot
eval
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)).
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.position = "bottom")
stat_plot
eval <- confusion + stat_plot
eval <- confusion + stat_plot
eval
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value),
predicted = str_sub(predicted, start = 9, end = 10),
observed = str_sub(observed, start = 9, end = 10))
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.position = "bottom")
confusion
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.position = "bottom")
stat_plot
eval <- confusion + stat_plot
eval
eval
eval
eval <- confusion + stat_plot +
plot_annotation(tag_levels = 'A')
eval
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)),
legend.position = "bottom")
stat_plot
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A')
eval
eval
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A')
eval
eval
eval <- confusion / stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A')
eval
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
eval <- confusion / stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A')
eval
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A')
eval
?ggsave()
ggsave(plot = eval,
filename = here("docs", "figures", "eval.png"),
height = 12,
width = 30,
units = "cm",
dpi = 300)
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
eval
ggsave(plot = eval,
filename = here("docs", "figures", "eval.png"),
height = 12,
width = 30,
units = "cm",
dpi = 300)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
vocal_spatial_pair <- tibble(dist_vocal = dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c(),
dist_spatial = dist(vocal_spatial %>% select(longitude, latitude),
method = "euclidean") %>% c())
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "red") +
geom_smooth(method = "lm", colour = "black") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
?stat_cor()
install.packages("ggpubr")
library(ggpubr)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
vocal_spatial_pair <- tibble(dist_vocal = dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c(),
dist_spatial = dist(vocal_spatial %>% select(longitude, latitude),
method = "euclidean") %>% c())
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "red") +
geom_smooth(method = "lm", colour = "black") +
xlab("Distance between sites") +
ylab("Vocal similarity") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
theme(axis.title = element_text(size = 16),
axis.text = element_text(size = 12))
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
vocal_spatial_pair <- tibble(dist_vocal = dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c(),
dist_spatial = dist(vocal_spatial %>% select(longitude, latitude),
method = "euclidean") %>% c())
ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Euclidean distance between sites",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Euclidean distance between sites",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
vocal_spatial
install.packages("terra")
library(terra)
vocal_spatial_pair
knitr::opts_chunk$set(echo = TRUE)
vocal_spatial_pair <- tibble(dist_vocal = dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c(),
dist_spatial = dist(vocal_spatial %>% select(longitude, latitude),
method = "euclidean") %>% c())
library(tidyverse)
vocal_spatial_pair <- tibble(dist_vocal = dist(vocal_spatial %>% select(LD1_mean, LD2_mean),
method = "euclidean") %>% c(),
dist_spatial = dist(vocal_spatial %>% select(longitude, latitude),
method = "euclidean") %>% c())
vocal_spatial_pair
sites_sp <- vect(vocal_spatial, crs = "+proj=longlat +datum=WGS84")
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_matrix <- terra::distance(sites_sp)
dist_matrix
sites_sp
vocal_spatial
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
distance()
dist_spatial <- vocal_spatial %>%
select(longitude, latitude)
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
vect(crs = "+proj=longlat +datum=WGS84")
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
coordinates
dist_spatial <- vocal_spatial %>%
select(longitude, latitude)
dist_spatial
coordinates %>% type
coordinates %>% type()
coordinates %>% class()
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix()
dist_spatial
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
distance()
dist_spatial
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean) %>%
dist(method = "euclidean")
dist_vocal
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Euclidean distance between sites",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial)
vocal_spatial_pair
install.packages("ggpubr")
library(ggpubr)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Euclidean distance between sites",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal/1000), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
similarity <- ggplot(aes(x = dist_spatial, y = (dist_vocal/1000)), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial %>% ./1000)
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial %>% *0.001)
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial %>% . * 0.001)
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
