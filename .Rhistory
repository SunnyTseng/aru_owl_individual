broom(model)
model$prior
model$means
model$scaling
model
model$prior
model$scaling
write_csv(here("docs", "tables", "LDA_table.csv"))
write_csv(model$scaling,here("docs", "tables", "LDA_table.csv"))
model_sca
model_scaling
model$scaling
model$scaling %>% class()
write_csv(model$scaling %>% as_tibble(), here("docs", "tables", "LDA_table.csv"))
model
knitr::opts_chunk$set(echo = TRUE)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
library(tidyverse)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
library(terra)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
library(here)
library(tidyverse)
library(lubridate)
library(reshape2)
library(sf)
library(leaflet)
library(ggmap)
library(ggspatial)
library(ggord)
install.packages(:ggord)
install.packages("ggord")
library(here)
library(tidyverse)
library(lubridate)
library(reshape2)
library(sf)
library(leaflet)
library(ggmap)
library(ggspatial)
library(ggord)
library(factoextra)
library(ggbiplot)
library(corrplot)
library(psych)
library(caret)
library(MASS)
library(klaR)
library(heplots)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
options(repos = c(
fawda123 = 'https://fawda123.r-universe.dev',
CRAN = 'https://cloud.r-project.org'))
# Install ggord
install.packages('ggord')
library(ggord)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
library(ggpubr)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
?stat_cor()
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5,
cor.coef.name = "rho", digits = 1) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5,
cor.coef.name = "rho", digits = 2) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
?stat_cor()
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5,
cor.coef.name = "rho", p.digits = 1) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
model
data_transformed
model
?lda()
model %>% str()
library(tidyverse)
model %>% str()
out.mda.f1 <- predict(model)
out.mda.f1
out.mda.f1 %>% head()
out.mda.f1 %>% head(3)
out.mda.f1$x %>% head()
cor.f1 <- round(cor(data_transformed[, -1], out.mda.f1$x[, 1:6]), digits = 2)
cor.f1
knitr::opts_chunk$set(echo = TRUE)
library(here)
library(tidyverse)
library(lubridate)
library(reshape2)
library(sf)
library(leaflet)
library(ggmap)
library(ggspatial)
library(ggord)
library(factoextra)
library(ggbiplot)
library(corrplot)
library(psych)
library(caret)
library(MASS)
library(klaR)
library(heplots)
test <- read_csv(here("data", "processed", "2021_owl_BirdNET.csv"))
test
test %>% unique(year)
test %>% unique(.$year)
test %>% distinct(year)
test %>% distinct(year, month, day, site, recording)
8*66*60
8*66*30
18458*10
18458*10/60
20000*10
20000*10/60
vocal_spatial
knitr::opts_chunk$set(echo = TRUE)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual)
library(tidyverse)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual)
vocal_spatial
vocal_spatial
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
library(here)
library(tidyverse)
library(lubridate)
library(reshape2)
library(sf)
library(leaflet)
library(ggmap)
library(ggspatial)
library(ggord)
library(factoextra)
library(ggbiplot)
library(corrplot)
library(psych)
library(caret)
library(MASS)
library(klaR)
library(heplots)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
library(terra)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5,
cor.coef.name = "rho", p.digits = 1) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
library(ggpubr)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5,
cor.coef.name = "rho", p.digits = 1) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5,
cor.coef.name = "rho", p.digits = 0) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 9, size = 5,
cor.coef.name = "rho", p.digits = 0) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 9.5, size = 5,
cor.coef.name = "rho", p.digits = 0) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
