as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5,
cor.coef.name = "rho", p.digits = 1) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 8.5, size = 5,
cor.coef.name = "rho", p.digits = 0) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
similarity
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 9, size = 5,
cor.coef.name = "rho", p.digits = 0) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
vocal_spatial <- cbind(data_transformed, predict(model)$x) %>%
group_by(individual) %>%
summarize(LD1_mean = mean(LD1),
LD2_mean = mean(LD2),
LD3_mean = mean(LD3),
LD4_mean = mean(LD4),
LD5_mean = mean(LD5),
LD6_mean = mean(LD6)) %>%
mutate(individual = str_sub(individual, start = 6)) %>%
left_join(data_location_clean, by = c("individual" = "site"))
coordinates <- cbind(vocal_spatial$longitude, vocal_spatial$latitude)
sites_sp <- vect(coordinates, crs = "+proj=longlat +datum=WGS84")
dist_spatial <- vocal_spatial %>%
select(longitude, latitude) %>%
as.matrix() %>%
vect(crs = "+proj=longlat +datum=WGS84") %>%
terra::distance()
dist_vocal <- vocal_spatial %>%
select(LD1_mean, LD2_mean, LD3_mean, LD4_mean, LD5_mean, LD6_mean) %>%
dist(method = "euclidean")
vocal_spatial_pair <- tibble(dist_vocal = dist_vocal,
dist_spatial = dist_spatial * 0.001)
similarity <- ggplot(aes(x = dist_spatial, y = dist_vocal), data = vocal_spatial_pair) +
geom_point(shape = 18, size = 4, colour = "black") +
geom_smooth(method = "lm", colour = "black") +
stat_cor(method = "pearson", label.x = 0.2, label.y = 9.5, size = 5,
cor.coef.name = "rho", p.digits = 0) +
theme_bw() +
labs(x = "Distance between sites (km)",
y = "Vocal similarity") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
ggsave(plot = similarity,
filename = here("docs", "figures", "similarity.png"),
height = 12,
width = 20,
units = "cm",
dpi = 300)
eval
knitr::opts_chunk$set(echo = TRUE)
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
library(here)
library(tidyverse)
library(lubridate)
library(reshape2)
library(sf)
library(leaflet)
library(ggmap)
library(ggspatial)
library(ggord)
library(factoextra)
library(factoextra)
library(ggbiplot)
library(corrplot)
library(psych)
library(psych)
library(caret)
library(psych)
library(caret)
library(MASS)
library(klaR)
library(psych)
library(caret)
library(MASS)
library(klaR)
library(heplots)
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
stat_plot
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value),
predicted = str_sub(predicted, start = 9, end = 10),
observed = str_sub(observed, start = 9, end = 10))
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
?label_number()
library(scales)
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
confusion
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
stat_plot
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
confusion
stat_plot
library(patchwork)
install.packages("patchwork")
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
library(patchwork)
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
eval
knitr::opts_chunk$set(echo = TRUE)
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
library(here)
library(tidyverse)
library(lubridate)
library(reshape2)
library(sf)
library(leaflet)
library(ggmap)
library(ggspatial)
library(ggord)
library(factoextra)
library(corrplot)
library(psych)
library(MASS)
library(klaR)
library(heplots)
df <- melt(cm_p_6[[1]]$table) %>%
mutate(value = round(value),
predicted = str_sub(predicted, start = 9, end = 10),
observed = str_sub(observed, start = 9, end = 10))
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
library(scales)
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
confusion
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
model_statistics <- read_csv(here("data", "final_model_statistics.csv"))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 12),
axis.title = element_text(size = 14),
legend.title = element_text(size = 12),
legend.text = element_text(size = 12),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
stat_plot
library(patchwork)
install.packages("patchwork")
library(patchwork)
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
eval
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.title = element_text(size = 16),
legend.text = element_text(size = 16),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 16),
axis.title = element_text(size = 18),
legend.title = element_text(size = 16),
legend.text = element_text(size = 16),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
eval
ggsave(plot = eval,
filename = here("docs", "figures", "eval.png"),
height = 12,
width = 30,
units = "cm",
dpi = 300)
confusion <- ggplot(df, aes(x = observed, y = predicted, fill = value)) +
geom_tile(color = "gray90",
lwd = 1.5,
linetype = 1) +
scale_fill_gradient2(high = "black",
low = "white",
na.value = "white",
trans = "log",
labels = label_number(accuracy = 1)) +
#scale_fill_gradient(low = "white", high = "black", na.value = "white") +
coord_fixed() +
labs(x = "Observed site",
y = "Predicted site",
fill = "# of calls") +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 18),
legend.text = element_text(size = 18),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
stat_plot <- model_statistics %>%
pivot_longer(cols = !...1, names_to = "site", values_to = "value") %>%
rename("metrics" = `...1`) %>%
filter(metrics %in% c("Sensitivity", "Specificity")) %>%
mutate(site = str_sub(site, start = 9, end = 10)) %>%
ggplot(aes(x = site, y = value, fill = metrics)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("aquamarine4", "darkolivegreen3")) +
theme_bw() +
labs(x = "Site",
y = "Value",
fill = "Metrics") +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 18),
legend.text = element_text(size = 18),
axis.title.y = element_text(margin = margin(t = 0, r = 10, b = 0, l = 0)),
axis.title.x = element_text(margin = margin(t = 10, r = 0, b = 0, l = 0)))
eval <- confusion + stat_plot +
plot_layout(widths = c(1,1)) +
plot_annotation(tag_levels = 'A') &
theme(plot.tag = element_text(size = 20))
ggsave(plot = eval,
filename = here("docs", "figures", "eval.png"),
height = 12,
width = 30,
units = "cm",
dpi = 300)
eval
